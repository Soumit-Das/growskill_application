package com.growskill.model;

import java.time.LocalDate;

import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.validation.constraints.Digits;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.util.*;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int userId;

	private String firstname;

	private String lastname;

	@NotNull(message = "age cannot be null")
	private int age;
	
	@Enumerated(EnumType.STRING)
	private GenderTypeEnum gender; 

	private String address;

	@Email(message = "Invalid email format")
	@Column(unique = true)
	private String email;

	@Pattern(regexp = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%!]).{8,}$", message = "Password must have at least 8 characters, one uppercase letter, one lowercase letter, one number, and one special character")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

	@Digits(integer = 10, fraction = 0, message = "Phone number should have exactly 10 digits")
	@Column(unique = true)
	private long phone;

	@DateTimeFormat(pattern = "yyyy-MM-dd")
	private LocalDate DateofBirth;

	@Column(columnDefinition = "VARCHAR(255) DEFAULT 'https://w7.pngwing.com/pngs/241/840/png-transparent-computer-icons-student-school-student-angle-people-logo-thumbnail.png'")
	private String profilePic;
	
	@Column(name = "role", nullable = true, columnDefinition = "VARCHAR(255) DEFAULT 'user'")
	private String role;

	@ManyToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE})
    @JoinTable(name = "user_course", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "course_id"))
    private List<Course> courses;
	
}
